# Generated by Django 5.1.6 on 2025-05-15 00:27

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('APP_G2S', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='accesslog',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='administrateur',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='Groupes auxquels cet utilisateur appartient.', to='auth.group', verbose_name='groupes'),
        ),
        migrations.AddField(
            model_name='administrateur',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Permissions spécifiques à cet utilisateur.', to='auth.permission', verbose_name='permissions'),
        ),
        migrations.AddField(
            model_name='approvalrequest',
            name='approver',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='requests_to_approve', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='approvalrequest',
            name='requester',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='requests_created', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='bulletinmatiere',
            name='bulletin',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matiere', to='APP_G2S.bulletinperformance'),
        ),
        migrations.AddField(
            model_name='classe',
            name='niveau_superieur',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='APP_G2S.classe'),
        ),
        migrations.AddField(
            model_name='bulletinperformance',
            name='classes',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bulletins', to='APP_G2S.classe'),
        ),
        migrations.AddField(
            model_name='administrateur',
            name='classe_creer',
            field=models.ManyToManyField(blank=True, related_name='administration', to='APP_G2S.classe'),
        ),
        migrations.AddField(
            model_name='eleve',
            name='classe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='eleves', to='APP_G2S.classe'),
        ),
        migrations.AddField(
            model_name='eleve',
            name='groups',
            field=models.ManyToManyField(blank=True, editable=False, help_text='Groupes auxquels cet utilisateur appartient.', to='auth.group', verbose_name='groupes'),
        ),
        migrations.AddField(
            model_name='eleve',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, editable=False, help_text='Permissions spécifiques à cet utilisateur.', to='auth.permission', verbose_name='permissions'),
        ),
        migrations.AddField(
            model_name='bulletinperformance',
            name='eleve',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bulletins', to='APP_G2S.eleve'),
        ),
        migrations.AddField(
            model_name='administrateur',
            name='eleve_creer',
            field=models.ManyToManyField(blank=True, related_name='administration', to='APP_G2S.eleve'),
        ),
        migrations.AddField(
            model_name='absence',
            name='eleve',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='absences', to='APP_G2S.eleve'),
        ),
        migrations.AddField(
            model_name='emploidutemps',
            name='classe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emplois_du_temps', to='APP_G2S.classe'),
        ),
        migrations.AddField(
            model_name='absence',
            name='emploi_du_temps',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='APP_G2S.emploidutemps'),
        ),
        migrations.AddField(
            model_name='emploidutemps',
            name='enseignant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='APP_G2S.enseignant'),
        ),
        migrations.AddField(
            model_name='classe',
            name='responsable',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='APP_G2S.enseignant'),
        ),
        migrations.AddField(
            model_name='administrateur',
            name='enseignant_creer',
            field=models.ManyToManyField(blank=True, related_name='administration', to='APP_G2S.enseignant'),
        ),
        migrations.AddField(
            model_name='examen',
            name='classe',
            field=models.ManyToManyField(to='APP_G2S.classe', verbose_name='Classe'),
        ),
        migrations.AddField(
            model_name='historiqueacademique',
            name='eleve',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='APP_G2S.eleve'),
        ),
        migrations.AddField(
            model_name='examen',
            name='matieres',
            field=models.ManyToManyField(to='APP_G2S.matiere', verbose_name='Matière'),
        ),
        migrations.AddField(
            model_name='enseignant',
            name='matieres',
            field=models.ManyToManyField(related_name='enseignants', to='APP_G2S.matiere'),
        ),
        migrations.AddField(
            model_name='emploidutemps',
            name='matiere',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='APP_G2S.matiere'),
        ),
        migrations.AddField(
            model_name='classe',
            name='matieres',
            field=models.ManyToManyField(to='APP_G2S.matiere'),
        ),
        migrations.AddField(
            model_name='bulletinmatiere',
            name='matiere',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='APP_G2S.matiere'),
        ),
        migrations.AddField(
            model_name='administrateur',
            name='matiere_creer',
            field=models.ManyToManyField(blank=True, related_name='administration', to='APP_G2S.matiere'),
        ),
        migrations.AddField(
            model_name='note',
            name='classe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='APP_G2S.classe'),
        ),
        migrations.AddField(
            model_name='note',
            name='eleve',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes_de_classe', to='APP_G2S.eleve'),
        ),
        migrations.AddField(
            model_name='note',
            name='examen_reference',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='APP_G2S.examen'),
        ),
        migrations.AddField(
            model_name='note',
            name='matiere',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='APP_G2S.matiere'),
        ),
        migrations.AddField(
            model_name='noteexamen',
            name='eleve',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes_examen', to='APP_G2S.eleve'),
        ),
        migrations.AddField(
            model_name='noteexamen',
            name='examen',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='APP_G2S.examen'),
        ),
        migrations.AddField(
            model_name='noteexamen',
            name='matiere',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='APP_G2S.matiere'),
        ),
        migrations.AddField(
            model_name='paiement',
            name='caissier',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='paiements_encaisses', to='APP_G2S.administrateur'),
        ),
        migrations.AddField(
            model_name='paiement',
            name='eleve',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='paiements', to='APP_G2S.eleve'),
        ),
        migrations.AddField(
            model_name='periode',
            name='classe',
            field=models.ManyToManyField(to='APP_G2S.classe', verbose_name='Classe'),
        ),
        migrations.AddField(
            model_name='noteexamen',
            name='periode',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='APP_G2S.periode'),
        ),
        migrations.AddField(
            model_name='note',
            name='periode',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='APP_G2S.periode'),
        ),
        migrations.AddField(
            model_name='historiqueacademique',
            name='periode',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='APP_G2S.periode'),
        ),
        migrations.AddField(
            model_name='examen',
            name='periode',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='APP_G2S.periode'),
        ),
        migrations.AddField(
            model_name='eleve',
            name='historique',
            field=models.ManyToManyField(through='APP_G2S.HistoriqueAcademique', to='APP_G2S.periode'),
        ),
        migrations.AddField(
            model_name='bulletinperformance',
            name='periode',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='APP_G2S.periode'),
        ),
        migrations.AddField(
            model_name='periodepaiement',
            name='classe',
            field=models.ManyToManyField(to='APP_G2S.classe'),
        ),
        migrations.AddField(
            model_name='periodepaiement',
            name='examen',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='APP_G2S.examen'),
        ),
        migrations.AddField(
            model_name='paiement',
            name='periode',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='APP_G2S.periodepaiement'),
        ),
        migrations.AddField(
            model_name='periode',
            name='tenant',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='periodes', to='APP_G2S.tenant'),
        ),
        migrations.AddField(
            model_name='matiere',
            name='tenant',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='matieres', to='APP_G2S.tenant'),
        ),
        migrations.AddField(
            model_name='enseignant',
            name='tenant',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='enseignants', to='APP_G2S.tenant'),
        ),
        migrations.AddField(
            model_name='eleve',
            name='tenant',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='eleves', to='APP_G2S.tenant'),
        ),
        migrations.AddField(
            model_name='classe',
            name='tenant',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='classes', to='APP_G2S.tenant'),
        ),
        migrations.AddField(
            model_name='administrateur',
            name='tenant',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='administrateurs', to='APP_G2S.tenant'),
        ),
        migrations.AddField(
            model_name='tranchepaiement',
            name='periode',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='APP_G2S.periodepaiement'),
        ),
        migrations.AddField(
            model_name='paiement',
            name='tranche',
            field=models.ForeignKey(blank=True, help_text='Tranche concernée (si paiement échelonné)', null=True, on_delete=django.db.models.deletion.SET_NULL, to='APP_G2S.tranchepaiement'),
        ),
        migrations.AddConstraint(
            model_name='emploidutemps',
            constraint=models.CheckConstraint(condition=models.Q(('end_time__gt', models.F('start_time'))), name='end_time_after_start_time'),
        ),
        migrations.AlterUniqueTogether(
            name='bulletinmatiere',
            unique_together={('bulletin', 'matiere')},
        ),
        migrations.AddConstraint(
            model_name='noteexamen',
            constraint=models.UniqueConstraint(fields=('eleve', 'matiere', 'periode'), name='unique_note_par_matiere_periode'),
        ),
        migrations.AlterUniqueTogether(
            name='historiqueacademique',
            unique_together={('eleve', 'periode')},
        ),
        migrations.AlterUniqueTogether(
            name='bulletinperformance',
            unique_together={('eleve', 'periode')},
        ),
        migrations.AddConstraint(
            model_name='periode',
            constraint=models.CheckConstraint(condition=models.Q(('date_fin__gt', models.F('date_debut'))), name='check_dates_ordre'),
        ),
        migrations.AlterUniqueTogether(
            name='matiere',
            unique_together={('tenant', 'nom')},
        ),
        migrations.AlterUniqueTogether(
            name='eleve',
            unique_together={('tenant', 'identifiant')},
        ),
        migrations.AlterUniqueTogether(
            name='classe',
            unique_together={('tenant', 'niveau', 'section')},
        ),
        migrations.AlterUniqueTogether(
            name='administrateur',
            unique_together={('tenant', 'email'), ('tenant', 'identifiant'), ('tenant', 'telephone')},
        ),
    ]
