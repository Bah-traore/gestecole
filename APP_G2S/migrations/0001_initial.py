# Generated by Django 5.1.6 on 2025-05-15 00:27

import datetime
import django.contrib.auth.models
import django.core.validators
import gestecole.utils.validators
import phonenumber_field.modelfields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Absence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('motif', models.TextField(blank=True, null=True)),
                ('justification_status', models.CharField(choices=[('NON_JUSTIFIE', 'Non justifié'), ('EN_ATTENTE', 'En attente de validation'), ('JUSTIFIE', 'Justifié')], default='NON_JUSTIFIE', max_length=20)),
                ('justification_document', models.FileField(blank=True, null=True, upload_to='justificatifs/', validators=[gestecole.utils.validators.validate_file_upload])),
                ('justification_commentaire', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='AccessLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('custom_user_id', models.PositiveIntegerField(blank=True, null=True)),
                ('custom_user_type', models.CharField(blank=True, max_length=50, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('action', models.CharField(max_length=100)),
                ('url', models.CharField(max_length=500)),
                ('details', models.JSONField(default=dict)),
                ('status', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Administrateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_joined', models.DateTimeField(auto_created=True, auto_now_add=True)),
                ('last_login', models.DateTimeField(auto_created=True, auto_now_add=True)),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('role', models.CharField(choices=[('DIRECTEUR', 'directeur'), ('CENSEUR', 'censeur'), ('SURVEILLANT', 'surveillant'), ('COMPTABLE', 'comptable')], max_length=20)),
                ('telephone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, null=True, region='ML')),
                ('email', models.EmailField(max_length=255)),
                ('identifiant', models.CharField(max_length=20, null=True, unique=True)),
                ('prenom', models.CharField(max_length=20)),
                ('nom', models.CharField(max_length=20)),
                ('username', models.CharField(blank=True, editable=False, max_length=20, null=True, verbose_name="Nom d'utilisateur")),
                ('first_name', models.CharField(editable=False, max_length=20)),
                ('last_name', models.CharField(editable=False, max_length=20)),
                ('password', models.CharField(max_length=128, verbose_name='Mot de Passe')),
                ('is_staff', models.BooleanField(default=False, editable=False)),
                ('is_superuser', models.BooleanField(default=False, editable=False)),
                ('is_admin', models.BooleanField(default=True, verbose_name='Compte admin')),
            ],
            options={
                'verbose_name': 'Administrateur',
                'verbose_name_plural': 'Administrateurs',
                'permissions': [('view_all', 'Peut voir toutes les données'), ('approve_all', 'Peut approuver toutes les actions'), ('manage_pedagogy', 'Gère la pédagogie'), ('validate_absences', 'Valider les absences')],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ApprovalRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_type', models.CharField(max_length=50)),
                ('target_object', models.JSONField()),
                ('status', models.CharField(choices=[('PENDING', 'En attente'), ('APPROVED', 'Approuvé'), ('REJECTED', 'Rejeté')], default='PENDING', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('resolved_at', models.DateTimeField(null=True)),
                ('comments', models.TextField(blank=True)),
                ('action_metadata', models.JSONField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BulletinMatiere',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(20.0)])),
            ],
        ),
        migrations.CreateModel(
            name='BulletinPerformance',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('date_creation', models.DateField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('versions', models.JSONField(default=list)),
                ('moyenne_coefficient', models.FloatField(default=0.0)),
                ('moyenne_generale', models.FloatField(default=0.0)),
                ('appreciation', models.TextField(blank=True, null=True)),
                ('classement', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Bulletin de performance',
                'verbose_name_plural': 'Bulletins de performance',
            },
        ),
        migrations.CreateModel(
            name='Classe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('niveau', models.PositiveIntegerField()),
                ('section', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C')], max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Eleve',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_joined', models.DateTimeField(auto_created=True, auto_now_add=True)),
                ('last_login', models.DateTimeField(auto_created=True, auto_now_add=True)),
                ('identifiant', models.CharField(blank=True, max_length=20, null=True)),
                ('nom', models.CharField(max_length=100)),
                ('prenom', models.CharField(max_length=100)),
                ('prenom_pere', models.CharField(max_length=100)),
                ('nom_pere', models.CharField(max_length=100)),
                ('nom_mere', models.CharField(max_length=100)),
                ('prenom_mere', models.CharField(max_length=100)),
                ('telephone', phonenumber_field.modelfields.PhoneNumberField(db_index=True, max_length=128, region='ML')),
                ('profile_picture', models.ImageField(default='default_profile.jpg', upload_to='eleves/', validators=[gestecole.utils.validators.validate_file_upload])),
                ('age', models.PositiveSmallIntegerField()),
                ('residence', models.CharField(max_length=50)),
                ('is_eleve', models.BooleanField(default=True, verbose_name='Un élève')),
                ('username', models.CharField(blank=True, editable=False, max_length=20, verbose_name="Nom d'utilisateur")),
                ('first_name', models.CharField(editable=False, max_length=20)),
                ('last_name', models.CharField(editable=False, max_length=20)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('password', models.CharField(max_length=128, verbose_name='Mot de Passe')),
                ('code_expiry', models.DateTimeField(default=datetime.datetime(2025, 5, 15, 0, 42, 57, 762580, tzinfo=datetime.timezone.utc), help_text="Elle s'auto saisie")),
                ('sms_code', models.CharField(blank=True, editable=False, max_length=6)),
                ('email', models.EmailField(editable=False, max_length=254)),
                ('user_type', models.CharField(default='eleve', editable=False, max_length=20)),
                ('is_superuser', models.BooleanField(default=False, editable=False)),
                ('is_staff', models.BooleanField(default=False, editable=False)),
                ('is_active', models.BooleanField(default=True, editable=False)),
                ('suspendu', models.BooleanField(default=False, verbose_name='Suspendu pour impayés')),
                ('redoublements', models.PositiveIntegerField(default=0)),
                ('est_expulse', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Elève',
                'verbose_name_plural': 'Elèves',
                'permissions': [('view_own_data', 'Peut voir ses propres données')],
            },
        ),
        migrations.CreateModel(
            name='EmploiDuTemps',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(verbose_name='Date du cours')),
                ('start_time', models.TimeField(verbose_name='Heure de début')),
                ('end_time', models.TimeField(verbose_name='Heure de fin')),
                ('salle', models.CharField(blank=True, max_length=50, null=True)),
                ('recurrence', models.CharField(choices=[('PONCTUEL', 'Ponctuel'), ('HEBDOMADAIRE', 'Toutes les semaines'), ('MENSUEL', 'Tous les mois')], default='PONCTUEL', max_length=12)),
                ('recurrence_end', models.DateField(blank=True, null=True)),
                ('processed', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Emploi du temps',
                'verbose_name_plural': 'Emplois du temps',
            },
        ),
        migrations.CreateModel(
            name='Enseignant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(auto_created=True, auto_now_add=True)),
                ('date_joined', models.DateTimeField(auto_created=True, auto_now_add=True)),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('identifiant', models.CharField(max_length=30, unique=True)),
                ('telephone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region='ML', unique=True)),
                ('nom_complet', models.CharField(max_length=100)),
                ('profile_picture', models.ImageField(default='default_profile.jpg', upload_to='enseignant/', validators=[gestecole.utils.validators.validate_file_upload])),
                ('is_enseignant', models.BooleanField(default=True)),
                ('username', models.CharField(blank=True, editable=False, max_length=20, verbose_name="Nom d'utilisateur")),
                ('email', models.EmailField(editable=False, max_length=254)),
                ('first_name', models.CharField(editable=False, max_length=20)),
                ('last_name', models.CharField(editable=False, max_length=20)),
                ('is_superuser', models.BooleanField(default=False, editable=False)),
                ('is_staff', models.BooleanField(default=False, editable=False)),
                ('is_active', models.BooleanField(default=True, editable=False)),
            ],
            options={
                'verbose_name': 'Enseignant',
                'verbose_name_plural': 'Enseignants',
            },
        ),
        migrations.CreateModel(
            name='Examen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, verbose_name="Nom de l'examen")),
                ('date', models.DateField(verbose_name="Date de l'examen")),
                ('date_fin', models.DateField(verbose_name='Date de fin')),
                ('validite', models.CharField(choices=[('EN_COURS', 'en_cours'), ('FIN', 'fin')], max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='HistoriqueAcademique',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('moyenne', models.FloatField()),
                ('decision', models.CharField(choices=[('ADMIS', 'Admis'), ('REDOUBLE', 'Redouble'), ('EXPULSE', 'Expulsé')], max_length=10)),
                ('paiement_complet', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Matiere',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('coefficient', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
            ],
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valeur', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(20.0)])),
                ('date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='NoteExamen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0), django.core.validators.MaxValueValidator(40.0)], verbose_name='Note')),
                ('date', models.DateField()),
                ('est_valide', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Paiement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('montant_paye', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(500)])),
                ('date_paiement', models.DateTimeField(auto_now_add=True)),
                ('mode_paiement', models.CharField(choices=[('ORANGE', 'Orange Money'), ('MALITEL', 'M-Money'), ('ESPECES', 'Espèces')], max_length=10)),
                ('transaction_id', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='Référence transaction')),
                ('statut_paiement', models.CharField(choices=[('EN_ATTENTE', 'En attente'), ('PARTIEL', 'Paiement partiel'), ('REUSSI', 'Paiement réussi'), ('ECHOUE', 'Paiement échoué'), ('ANNULE', 'Paiement annulé')], default='EN_ATTENTE', max_length=20)),
                ('numero_quittance', models.CharField(editable=False, max_length=20, unique=True)),
                ('preuve_paiement', models.FileField(blank=True, help_text='Scan du reçu pour paiement mobile', null=True, upload_to='preuves_paiement/')),
                ('commentaire', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['-date_paiement'],
                'permissions': [('confirmer_paiement', 'Peut confirmer les paiements'), ('annuler_paiement', 'Peut annuler les paiements')],
            },
        ),
        migrations.CreateModel(
            name='Periode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.PositiveSmallIntegerField()),
                ('annee_scolaire', models.CharField(max_length=22)),
                ('date_debut', models.DateField()),
                ('date_fin', models.DateField()),
                ('is_active', models.BooleanField(default=False, verbose_name='Période active')),
                ('cloture', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='PeriodePaiement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50)),
                ('date_debut', models.DateField()),
                ('date_fin', models.DateField()),
                ('montant_total', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(5000)])),
                ('mode_paiement', models.CharField(choices=[('FULL', 'Paiement unique'), ('PARTIEL', 'Paiement échelonné')], default='FULL', max_length=7)),
                ('nombre_tranches', models.PositiveIntegerField(default=1, help_text='Nombre de tranches pour le paiement échelonné')),
                ('rappel_jours', models.PositiveIntegerField(default=3)),
                ('modalites_paiement', models.TextField(blank=True, help_text='Modalités de paiement spécifiques')),
                ('historique_modifications', models.JSONField(blank=True, help_text='Historique des modifications de la période', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tenant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, unique=True)),
                ('subdomain', models.CharField(max_length=50, unique=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='tenants/logo/')),
                ('config', models.JSONField(default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('adresse', models.CharField(blank=True, max_length=255)),
                ('telephone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region='ML')),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('site_web', models.URLField(blank=True)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'École',
                'verbose_name_plural': 'Écoles',
            },
        ),
        migrations.CreateModel(
            name='TranchePaiement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_echeance', models.DateField()),
                ('montant', models.DecimalField(decimal_places=2, max_digits=10)),
                ('ordre', models.PositiveIntegerField()),
                ('statut', models.CharField(choices=[('NON_ECHEU', 'Non échue'), ('ECHEU', 'Échue'), ('PAYE', 'Payée'), ('PARTIEL', 'Partiellement payé')], default='NON_ECHEU', max_length=10)),
            ],
            options={
                'ordering': ['ordre'],
            },
        ),
    ]
